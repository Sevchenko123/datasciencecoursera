{
    "contents" : "library(shiny)\nlibrary(data.table)\nlibrary(NLP)\nlibrary(tm)\n\n#Read in Dataset\nDataset <- fread(\"NgramTable_05percent_Datatable.txt\")\nsetkeyv(Dataset, c('w1', 'w2', 'w3', 'w4', 'freq'))\n\nTranslate_Input <- function(Text){\n        Mod_Input <- tolower(Text)\n        Mod_Input <- stripWhitespace(Mod_Input)\n        Mod_Input <- gsub(\"[^\\\\p{L}\\\\s]+\", \"\", Mod_Input, ignore.case=F, perl=T)\n        return(Mod_Input)\n}\n\nSplit_Translate_Input <- function(Text){\n        Mod_Input <- tolower(Text)\n        Mod_Input <- stripWhitespace(Mod_Input)\n        Mod_Input <- gsub(\"[^\\\\p{L}\\\\s]+\", \"\", Mod_Input, ignore.case=F, perl=T)\n        Split_Trans_Input <- unlist(strsplit(Mod_Input, \" \"))\n        return(Split_Trans_Input)\n}\n\nWord_Count1 <- function(TextInputA){\n        NgramsTable <<- Dataset[list(\"<s>\", TextInputA[1])]\n        NgramsTable <<- NgramsTable[NgramsTable$w3!=\"<s>\", ]\n        NgramsTable <<- NgramsTable[order(NgramsTable$freq, decreasing=TRUE), ]\n        \n        #List Alternatives\n        AlternativeGuess <<- as.data.frame(NgramsTable)\n        AlternativeGuess <<- AlternativeGuess[1:10, c(\"w3\", \"freq\")]\n        AlternativeGuess <<- AlternativeGuess[!is.na(AlternativeGuess$freq), ]\n        AlternativeGuess <<- AlternativeGuess[!duplicated(AlternativeGuess), ]\n        if(nrow(AlternativeGuess)==0){\n                AlternativeGuess <<- data.frame(Word=NA, Likelihood=NA)\n        }else{\n                AlternativeGuess$freq <- round(AlternativeGuess$freq/sum(AlternativeGuess$freq)*100, 1)\n                AlternativeGuess <<- AlternativeGuess\n                colnames(AlternativeGuess) <<- c(\"Word\", \"Likelihood\")\n                rownames(AlternativeGuess) <<- NULL\n        }\n        \n        Guess_Output <- NgramsTable$w3[1]\n        if(is.na(Guess_Output)|is.null(Guess_Output)){\n                Guess_Output <- \"We're sorry. This app could not predict the next word. You either picked a rare word or possibly mispelled it.\"\n        }\n        \n        return(Guess_Output)\n}\n\nWord_Count2 <- function(TextInputB){\n        NgramsTable <<- Dataset[list(\"<s>\", TextInputB[1], TextInputB[2])]\n        NgramsTable <<- NgramsTable[NgramsTable$w4!=\"<s>\", ]\n        NgramsTable <<- NgramsTable[order(NgramsTable$freq, decreasing=TRUE), ]\n        \n        #List Alternatives\n        AlternativeGuess <<- as.data.frame(NgramsTable)\n        AlternativeGuess <<- AlternativeGuess[1:10, c(\"w4\", \"freq\")]\n        AlternativeGuess <<- AlternativeGuess[!is.na(AlternativeGuess$freq), ]\n        AlternativeGuess <<- AlternativeGuess[!duplicated(AlternativeGuess), ]\n        if(nrow(AlternativeGuess)==0){\n                AlternativeGuess <<- data.frame(Word=NA, Likelihood=NA)\n        }else{\n                AlternativeGuess$freq <- round(AlternativeGuess$freq/sum(AlternativeGuess$freq)*100, 1)\n                AlternativeGuess <<- AlternativeGuess\n                colnames(AlternativeGuess) <<- c(\"Word\", \"Likelihood\")\n                rownames(AlternativeGuess) <<- NULL\n        }\n        \n        Guess_Output <- NgramsTable$w4[1]\n        if(is.na(Guess_Output)|is.null(Guess_Output)){       \n                Guess_Output <- Word_Count1(TextInputB[2])\n        }\n        \n        return(Guess_Output)\n}\n\nWord_Count3 <- function(TextInputC){\n        NgramsTable <<- Dataset[list(\"<s>\", TextInputC[1], TextInputC[2], TextInputC[3])]\n        NgramsTable <<- NgramsTable[NgramsTable$w5!=\"<s>\", ]\n        NgramsTable <<- NgramsTable[order(NgramsTable$freq, decreasing=TRUE), ]\n        \n        #List Alternatives\n        AlternativeGuess <<- as.data.frame(NgramsTable)\n        AlternativeGuess <<- AlternativeGuess[1:10, c(\"w5\", \"freq\")]\n        AlternativeGuess <<- AlternativeGuess[!is.na(AlternativeGuess$freq), ]\n        AlternativeGuess <<- AlternativeGuess[!duplicated(AlternativeGuess), ]\n        if(nrow(AlternativeGuess)==0){\n                AlternativeGuess <<- data.frame(Word=NA, Likelihood=NA)\n        }else{\n                AlternativeGuess$freq <- round(AlternativeGuess$freq/sum(AlternativeGuess$freq)*100, 1)\n                AlternativeGuess <<- AlternativeGuess\n                colnames(AlternativeGuess) <<- c(\"Word\", \"Likelihood\")\n                rownames(AlternativeGuess) <<- NULL\n        }\n        \n        Guess_Output <- NgramsTable$w5[1]\n        if(is.na(Guess_Output)|is.null(Guess_Output)){\n                Shortened_Input <- c(TextInputC[2], TextInputC[3])\n                Guess_Output <- Word_Count2(Shortened_Input)\n                if(is.na(Guess_Output)|is.null(Guess_Output)){\n                        Guess_Output <- Word_Count1(TextInputC[3])\n                }\n        }\n        \n        return(Guess_Output)\n}\n",
    "created" : 1462589498056.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "162697636",
    "id" : "A64CB939",
    "lastKnownWriteTime" : 1462651814,
    "path" : "~/Desktop/DS_Capstone/DS_2/main.R",
    "project_path" : "main.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}